
#user nobody nogroup; #表示以默认用户（root）运行。若取消注释，注意修改为相应权限的用户与组。
worker_processes auto;

#error_log /var/log/nginx/error.log;

#pid /run/nginx.pid;

events {
    worker_connections 1024;
}

stream {
    map $ssl_preread_server_name $backend_name {
        zv.xx.yy  vless; #zv.xx.yy修改为自己规划对应vless+tcp+tls的域名
        zt.xx.yy trojan; #zt.xx.yy修改为自己规划对应trojan-go或trojan的域名
        zh.xx.yy  http2; #zh.xx.yy修改为自己规划对应http/2 server的域名
    }
    upstream vless {
        server unix:/dev/shm/vless.sock; #转给vless+tcp+tls监听进程
    }
    upstream trojan {
        server unix:/dev/shm/trojan.sock; #转给中转监听进程
    }
    upstream http2 {
        server unix:/dev/shm/http2.sock; #转给http/2 server监听进程
    }
    server {
        listen 443;
        listen [::]:443; #无IPv6，此项可以删除。
        ssl_preread on;
        proxy_pass $backend_name;
        proxy_protocol on; #启用PROXY protocol发送（全局模式）
    }

    server { #此配置解决nginx SNI中的PROXY protocol发送是针对分流端口全部开启，而trojan-go或trojan不支持PROXY protocol接收问题。
        listen unix:/dev/shm/trojan.sock proxy_protocol; #中转监听进程与开启PROXY protocol接收
        proxy_pass 127.0.0.1:6443; #转给trojan-go或trojan本地监听端口
    }
}

http {
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    server {
        listen 80;
        listen [::]:80; #无IPv6，此项可以删除。
        return 301 https://$host$request_uri; #http自动跳转https，让网站看起来更真实。
    }

    server {
        listen 127.0.0.1:81; #http/1.1 server本地监听端口
        listen 127.0.0.1:82 http2; #h2c server本地监听端口

        location / {
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; #启用HSTS
            root /var/www/html; #修改为自己存放的WEB文件路径
            index index.html index.htm;
        }
    }

    server {
        listen unix:/dev/shm/http2.sock ssl http2 proxy_protocol; #http/2 server监听进程与开启PROXY protocol接收
        set_real_ip_from unix:;
        real_ip_header proxy_protocol;

        ssl_certificate /home/tls/zh.xx.yy/zh.xx.yy.crt; #换成自己的证书，绝对路径。
        ssl_certificate_key /home/tls/zh.xx.yy/zh.xx.yy.key; #换成自己的密钥，绝对路径。

        ssl_protocols TLSv1.3 TLSv1.2; #TLSv1.3需使用版本不小于1.1.1的OpenSSL软件库包编译才支持
        ssl_ciphers TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305; #若不支持TLSv1.3，删除前三个密码套件。若证书为RSA证书，所有ECDSA改为RSA。
        ssl_ecdh_curve secp521r1:secp384r1:secp256r1:x25519; #该参数需使用版本不小于3.0.0的OpenSSL软件库包编译才支持
        ssl_prefer_server_ciphers on;

        location /SALdGZ9k { #与shadowsocks+grpc应用中serviceName对应
            if ($request_method != "POST") {
                return 404;
            } #POST协商失败时返回404
            client_body_buffer_size 1m;
            client_body_timeout 1h;
            client_max_body_size 0;
            grpc_pass grpc://127.0.0.1:2011; #转发给本机shadowsocks+grpc监听端口
            grpc_read_timeout 1h;
            grpc_send_timeout 1h;
            grpc_set_header X-Real-IP $remote_addr;
        }

        location / {
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; #启用HSTS
            root /var/www/html; #修改为自己存放的WEB文件路径
            index index.html index.htm;
        }
    }
}
